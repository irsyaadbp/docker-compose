name: Deploy Service

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Pilih service yang akan dideploy'
        required: true
        default: 'caddy'
        type: choice
        options:
          - caddy
          - caddy-restart
          - traefik
          - postgresql

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy selected service to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            #!/bin/bash

            SERVICE="${{ github.event.inputs.service }}"

            # Jika SERVICE mengandung '-restart', maka langsung restart Caddy & stop script
            if [[ "$SERVICE" == *"-restart"* ]]; then
              echo "Restarting Caddy..."
              docker restart caddy
              exit 0
            fi

            # Pindah ke direktori utama deploy, jika belum ada buat terlebih dahulu
            if [ ! -d "/deploy" ]; then
              echo "Membuat folder /deploy..."
              mkdir -p /deploy
            fi
            cd /deploy

            # Cek apakah folder docker-compose sudah ada, jika tidak maka clone repo
            if [ ! -d "docker-compose" ]; then
              echo "Repository tidak ditemukan, melakukan clone..."
              git clone https://github.com/irsyaadbp/docker-compose.git docker-compose
            fi

            # Masuk ke dalam folder docker-compose
            cd docker-compose

            # Pastikan repository sudah menjadi Git repo sebelum git pull
            if [ -d ".git" ]; then
              echo "Melakukan git pull untuk mendapatkan update terbaru..."
              git pull origin main
            else
              echo "Folder docker-compose ada tetapi bukan repository git. Periksa manual."
              exit 1
            fi

            # Cek apakah folder service sudah ada, jika belum, lakukan pull ulang
            if [ ! -d "${{ github.event.inputs.service }}" ]; then
              echo "Service '${{ github.event.inputs.service }}' tidak ditemukan, melakukan git pull..."
              git pull origin main
            fi

            # Pindah ke direktori service yang akan dijalankan
            cd "/deploy/docker-compose/${{ github.event.inputs.service }}"

            if [[ "$SERVICE" == "postgresql" ]]; then
              echo "Set env postgre."
              # Jika file .env sudah ada, hapus dulu
              if [[ -f .env ]]; then
                rm .env
              fi
              # Buat file .env baru dengan value dari GitHub Secrets
              echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
              echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
              echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            fi

            # Jalankan docker-compose untuk service tersebut
            echo "Menjalankan service '${{ github.event.inputs.service }}' dengan docker-compose..."
            docker-compose down
            if [[ "$SERVICE" == "postgresql" ]]; then
              docker-compose --env-file .env up -d
            else
              docker-compose up -d
            fi
